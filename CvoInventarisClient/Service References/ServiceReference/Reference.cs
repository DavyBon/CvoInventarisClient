//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CvoInventarisClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cpu", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceCvoInventaris")]
    [System.SerializableAttribute()]
    public partial class Cpu : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FabrieksNummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCpuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SnelheidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FabrieksNummer {
            get {
                return this.FabrieksNummerField;
            }
            set {
                if ((object.ReferenceEquals(this.FabrieksNummerField, value) != true)) {
                    this.FabrieksNummerField = value;
                    this.RaisePropertyChanged("FabrieksNummer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCpu {
            get {
                return this.IdCpuField;
            }
            set {
                if ((this.IdCpuField.Equals(value) != true)) {
                    this.IdCpuField = value;
                    this.RaisePropertyChanged("IdCpu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merk {
            get {
                return this.MerkField;
            }
            set {
                if ((object.ReferenceEquals(this.MerkField, value) != true)) {
                    this.MerkField = value;
                    this.RaisePropertyChanged("Merk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Snelheid {
            get {
                return this.SnelheidField;
            }
            set {
                if ((this.SnelheidField.Equals(value) != true)) {
                    this.SnelheidField = value;
                    this.RaisePropertyChanged("Snelheid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Device", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceCvoInventaris")]
    [System.SerializableAttribute()]
    public partial class Device : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FabrieksNummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdDeviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPcCompatibelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerienummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FabrieksNummer {
            get {
                return this.FabrieksNummerField;
            }
            set {
                if ((object.ReferenceEquals(this.FabrieksNummerField, value) != true)) {
                    this.FabrieksNummerField = value;
                    this.RaisePropertyChanged("FabrieksNummer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdDevice {
            get {
                return this.IdDeviceField;
            }
            set {
                if ((this.IdDeviceField.Equals(value) != true)) {
                    this.IdDeviceField = value;
                    this.RaisePropertyChanged("IdDevice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPcCompatibel {
            get {
                return this.IsPcCompatibelField;
            }
            set {
                if ((this.IsPcCompatibelField.Equals(value) != true)) {
                    this.IsPcCompatibelField = value;
                    this.RaisePropertyChanged("IsPcCompatibel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merk {
            get {
                return this.MerkField;
            }
            set {
                if ((object.ReferenceEquals(this.MerkField, value) != true)) {
                    this.MerkField = value;
                    this.RaisePropertyChanged("Merk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Serienummer {
            get {
                return this.SerienummerField;
            }
            set {
                if ((object.ReferenceEquals(this.SerienummerField, value) != true)) {
                    this.SerienummerField = value;
                    this.RaisePropertyChanged("Serienummer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GrafischeKaart", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceCvoInventaris")]
    [System.SerializableAttribute()]
    public partial class GrafischeKaart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FabrieksNummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdGrafischeKaartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FabrieksNummer {
            get {
                return this.FabrieksNummerField;
            }
            set {
                if ((object.ReferenceEquals(this.FabrieksNummerField, value) != true)) {
                    this.FabrieksNummerField = value;
                    this.RaisePropertyChanged("FabrieksNummer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdGrafischeKaart {
            get {
                return this.IdGrafischeKaartField;
            }
            set {
                if ((this.IdGrafischeKaartField.Equals(value) != true)) {
                    this.IdGrafischeKaartField = value;
                    this.RaisePropertyChanged("IdGrafischeKaart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merk {
            get {
                return this.MerkField;
            }
            set {
                if ((object.ReferenceEquals(this.MerkField, value) != true)) {
                    this.MerkField = value;
                    this.RaisePropertyChanged("Merk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Harddisk", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceCvoInventaris")]
    [System.SerializableAttribute()]
    public partial class Harddisk : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int grootteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idHarddiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string merkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int grootte {
            get {
                return this.grootteField;
            }
            set {
                if ((this.grootteField.Equals(value) != true)) {
                    this.grootteField = value;
                    this.RaisePropertyChanged("grootte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idHarddisk {
            get {
                return this.idHarddiskField;
            }
            set {
                if ((this.idHarddiskField.Equals(value) != true)) {
                    this.idHarddiskField = value;
                    this.RaisePropertyChanged("idHarddisk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string merk {
            get {
                return this.merkField;
            }
            set {
                if ((object.ReferenceEquals(this.merkField, value) != true)) {
                    this.merkField = value;
                    this.RaisePropertyChanged("merk");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Leverancier", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceCvoInventaris")]
    [System.SerializableAttribute()]
    public partial class Leverancier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string afkortingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string btwNummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int busNummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string faxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int huisNummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ibanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idLeverancierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string naamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int postcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string straatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string telefoonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime toegevoegdOpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string websiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string afkorting {
            get {
                return this.afkortingField;
            }
            set {
                if ((object.ReferenceEquals(this.afkortingField, value) != true)) {
                    this.afkortingField = value;
                    this.RaisePropertyChanged("afkorting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bic {
            get {
                return this.bicField;
            }
            set {
                if ((object.ReferenceEquals(this.bicField, value) != true)) {
                    this.bicField = value;
                    this.RaisePropertyChanged("bic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string btwNummer {
            get {
                return this.btwNummerField;
            }
            set {
                if ((object.ReferenceEquals(this.btwNummerField, value) != true)) {
                    this.btwNummerField = value;
                    this.RaisePropertyChanged("btwNummer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int busNummer {
            get {
                return this.busNummerField;
            }
            set {
                if ((this.busNummerField.Equals(value) != true)) {
                    this.busNummerField = value;
                    this.RaisePropertyChanged("busNummer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fax {
            get {
                return this.faxField;
            }
            set {
                if ((object.ReferenceEquals(this.faxField, value) != true)) {
                    this.faxField = value;
                    this.RaisePropertyChanged("fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int huisNummer {
            get {
                return this.huisNummerField;
            }
            set {
                if ((this.huisNummerField.Equals(value) != true)) {
                    this.huisNummerField = value;
                    this.RaisePropertyChanged("huisNummer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string iban {
            get {
                return this.ibanField;
            }
            set {
                if ((object.ReferenceEquals(this.ibanField, value) != true)) {
                    this.ibanField = value;
                    this.RaisePropertyChanged("iban");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idLeverancier {
            get {
                return this.idLeverancierField;
            }
            set {
                if ((this.idLeverancierField.Equals(value) != true)) {
                    this.idLeverancierField = value;
                    this.RaisePropertyChanged("idLeverancier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string naam {
            get {
                return this.naamField;
            }
            set {
                if ((object.ReferenceEquals(this.naamField, value) != true)) {
                    this.naamField = value;
                    this.RaisePropertyChanged("naam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int postcode {
            get {
                return this.postcodeField;
            }
            set {
                if ((this.postcodeField.Equals(value) != true)) {
                    this.postcodeField = value;
                    this.RaisePropertyChanged("postcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string straat {
            get {
                return this.straatField;
            }
            set {
                if ((object.ReferenceEquals(this.straatField, value) != true)) {
                    this.straatField = value;
                    this.RaisePropertyChanged("straat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string telefoon {
            get {
                return this.telefoonField;
            }
            set {
                if ((object.ReferenceEquals(this.telefoonField, value) != true)) {
                    this.telefoonField = value;
                    this.RaisePropertyChanged("telefoon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime toegevoegdOp {
            get {
                return this.toegevoegdOpField;
            }
            set {
                if ((this.toegevoegdOpField.Equals(value) != true)) {
                    this.toegevoegdOpField = value;
                    this.RaisePropertyChanged("toegevoegdOp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string website {
            get {
                return this.websiteField;
            }
            set {
                if ((object.ReferenceEquals(this.websiteField, value) != true)) {
                    this.websiteField = value;
                    this.RaisePropertyChanged("website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lokaal", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceCvoInventaris")]
    [System.SerializableAttribute()]
    public partial class Lokaal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int aantalPlaatsenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idLokaalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idNetwerkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isComputerLokaalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lokaalNaamField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int aantalPlaatsen {
            get {
                return this.aantalPlaatsenField;
            }
            set {
                if ((this.aantalPlaatsenField.Equals(value) != true)) {
                    this.aantalPlaatsenField = value;
                    this.RaisePropertyChanged("aantalPlaatsen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idLokaal {
            get {
                return this.idLokaalField;
            }
            set {
                if ((this.idLokaalField.Equals(value) != true)) {
                    this.idLokaalField = value;
                    this.RaisePropertyChanged("idLokaal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idNetwerk {
            get {
                return this.idNetwerkField;
            }
            set {
                if ((this.idNetwerkField.Equals(value) != true)) {
                    this.idNetwerkField = value;
                    this.RaisePropertyChanged("idNetwerk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isComputerLokaal {
            get {
                return this.isComputerLokaalField;
            }
            set {
                if ((this.isComputerLokaalField.Equals(value) != true)) {
                    this.isComputerLokaalField = value;
                    this.RaisePropertyChanged("isComputerLokaal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lokaalNaam {
            get {
                return this.lokaalNaamField;
            }
            set {
                if ((object.ReferenceEquals(this.lokaalNaamField, value) != true)) {
                    this.lokaalNaamField = value;
                    this.RaisePropertyChanged("lokaalNaam");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TblInventaris", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceCvoInventaris")]
    [System.SerializableAttribute()]
    public partial class TblInventaris : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TblObject", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceCvoInventaris")]
    [System.SerializableAttribute()]
    public partial class TblObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TblNetwerk", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceCvoInventaris")]
    [System.SerializableAttribute()]
    public partial class TblNetwerk : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string driverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string merkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string snelheidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string driver {
            get {
                return this.driverField;
            }
            set {
                if ((object.ReferenceEquals(this.driverField, value) != true)) {
                    this.driverField = value;
                    this.RaisePropertyChanged("driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string merk {
            get {
                return this.merkField;
            }
            set {
                if ((object.ReferenceEquals(this.merkField, value) != true)) {
                    this.merkField = value;
                    this.RaisePropertyChanged("merk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string snelheid {
            get {
                return this.snelheidField;
            }
            set {
                if ((object.ReferenceEquals(this.snelheidField, value) != true)) {
                    this.snelheidField = value;
                    this.RaisePropertyChanged("snelheid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.ICvoInventarisService")]
    public interface ICvoInventarisService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/CpuGetById", ReplyAction="http://tempuri.org/ICvoInventarisService/CpuGetByIdResponse")]
        CvoInventarisClient.ServiceReference.Cpu CpuGetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/CpuGetById", ReplyAction="http://tempuri.org/ICvoInventarisService/CpuGetByIdResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Cpu> CpuGetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/CpuGetAll", ReplyAction="http://tempuri.org/ICvoInventarisService/CpuGetAllResponse")]
        CvoInventarisClient.ServiceReference.Cpu[] CpuGetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/CpuGetAll", ReplyAction="http://tempuri.org/ICvoInventarisService/CpuGetAllResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Cpu[]> CpuGetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/CpuCreate", ReplyAction="http://tempuri.org/ICvoInventarisService/CpuCreateResponse")]
        int CpuCreate(CvoInventarisClient.ServiceReference.Cpu c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/CpuCreate", ReplyAction="http://tempuri.org/ICvoInventarisService/CpuCreateResponse")]
        System.Threading.Tasks.Task<int> CpuCreateAsync(CvoInventarisClient.ServiceReference.Cpu c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/CpuUpdate", ReplyAction="http://tempuri.org/ICvoInventarisService/CpuUpdateResponse")]
        bool CpuUpdate(CvoInventarisClient.ServiceReference.Cpu c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/CpuUpdate", ReplyAction="http://tempuri.org/ICvoInventarisService/CpuUpdateResponse")]
        System.Threading.Tasks.Task<bool> CpuUpdateAsync(CvoInventarisClient.ServiceReference.Cpu c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/CpuDelete", ReplyAction="http://tempuri.org/ICvoInventarisService/CpuDeleteResponse")]
        bool CpuDelete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/CpuDelete", ReplyAction="http://tempuri.org/ICvoInventarisService/CpuDeleteResponse")]
        System.Threading.Tasks.Task<bool> CpuDeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeviceGetById", ReplyAction="http://tempuri.org/ICvoInventarisService/DeviceGetByIdResponse")]
        CvoInventarisClient.ServiceReference.Device DeviceGetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeviceGetById", ReplyAction="http://tempuri.org/ICvoInventarisService/DeviceGetByIdResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Device> DeviceGetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeviceGetAll", ReplyAction="http://tempuri.org/ICvoInventarisService/DeviceGetAllResponse")]
        CvoInventarisClient.ServiceReference.Device[] DeviceGetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeviceGetAll", ReplyAction="http://tempuri.org/ICvoInventarisService/DeviceGetAllResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Device[]> DeviceGetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeviceCreate", ReplyAction="http://tempuri.org/ICvoInventarisService/DeviceCreateResponse")]
        int DeviceCreate(CvoInventarisClient.ServiceReference.Device d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeviceCreate", ReplyAction="http://tempuri.org/ICvoInventarisService/DeviceCreateResponse")]
        System.Threading.Tasks.Task<int> DeviceCreateAsync(CvoInventarisClient.ServiceReference.Device d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeviceUpdate", ReplyAction="http://tempuri.org/ICvoInventarisService/DeviceUpdateResponse")]
        bool DeviceUpdate(CvoInventarisClient.ServiceReference.Device d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeviceUpdate", ReplyAction="http://tempuri.org/ICvoInventarisService/DeviceUpdateResponse")]
        System.Threading.Tasks.Task<bool> DeviceUpdateAsync(CvoInventarisClient.ServiceReference.Device d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeviceDelete", ReplyAction="http://tempuri.org/ICvoInventarisService/DeviceDeleteResponse")]
        bool DeviceDelete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeviceDelete", ReplyAction="http://tempuri.org/ICvoInventarisService/DeviceDeleteResponse")]
        System.Threading.Tasks.Task<bool> DeviceDeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GrafischeKaartGetById", ReplyAction="http://tempuri.org/ICvoInventarisService/GrafischeKaartGetByIdResponse")]
        CvoInventarisClient.ServiceReference.GrafischeKaart GrafischeKaartGetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GrafischeKaartGetById", ReplyAction="http://tempuri.org/ICvoInventarisService/GrafischeKaartGetByIdResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.GrafischeKaart> GrafischeKaartGetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GrafischeKaartGetAll", ReplyAction="http://tempuri.org/ICvoInventarisService/GrafischeKaartGetAllResponse")]
        CvoInventarisClient.ServiceReference.GrafischeKaart[] GrafischeKaartGetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GrafischeKaartGetAll", ReplyAction="http://tempuri.org/ICvoInventarisService/GrafischeKaartGetAllResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.GrafischeKaart[]> GrafischeKaartGetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GrafischeKaartCreate", ReplyAction="http://tempuri.org/ICvoInventarisService/GrafischeKaartCreateResponse")]
        int GrafischeKaartCreate(CvoInventarisClient.ServiceReference.GrafischeKaart g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GrafischeKaartCreate", ReplyAction="http://tempuri.org/ICvoInventarisService/GrafischeKaartCreateResponse")]
        System.Threading.Tasks.Task<int> GrafischeKaartCreateAsync(CvoInventarisClient.ServiceReference.GrafischeKaart g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GrafischeKaartUpdate", ReplyAction="http://tempuri.org/ICvoInventarisService/GrafischeKaartUpdateResponse")]
        bool GrafischeKaartUpdate(CvoInventarisClient.ServiceReference.GrafischeKaart g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GrafischeKaartUpdate", ReplyAction="http://tempuri.org/ICvoInventarisService/GrafischeKaartUpdateResponse")]
        System.Threading.Tasks.Task<bool> GrafischeKaartUpdateAsync(CvoInventarisClient.ServiceReference.GrafischeKaart g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GrafischeKaartDelete", ReplyAction="http://tempuri.org/ICvoInventarisService/GrafischeKaartDeleteResponse")]
        bool GrafischeKaartDelete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GrafischeKaartDelete", ReplyAction="http://tempuri.org/ICvoInventarisService/GrafischeKaartDeleteResponse")]
        System.Threading.Tasks.Task<bool> GrafischeKaartDeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GetHarddisks", ReplyAction="http://tempuri.org/ICvoInventarisService/GetHarddisksResponse")]
        CvoInventarisClient.ServiceReference.Harddisk[] GetHarddisks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GetHarddisks", ReplyAction="http://tempuri.org/ICvoInventarisService/GetHarddisksResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Harddisk[]> GetHarddisksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GetHarddiskById", ReplyAction="http://tempuri.org/ICvoInventarisService/GetHarddiskByIdResponse")]
        CvoInventarisClient.ServiceReference.Harddisk GetHarddiskById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GetHarddiskById", ReplyAction="http://tempuri.org/ICvoInventarisService/GetHarddiskByIdResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Harddisk> GetHarddiskByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InsertHarddisk", ReplyAction="http://tempuri.org/ICvoInventarisService/InsertHarddiskResponse")]
        int InsertHarddisk(CvoInventarisClient.ServiceReference.Harddisk h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InsertHarddisk", ReplyAction="http://tempuri.org/ICvoInventarisService/InsertHarddiskResponse")]
        System.Threading.Tasks.Task<int> InsertHarddiskAsync(CvoInventarisClient.ServiceReference.Harddisk h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/UpdateHarddisk", ReplyAction="http://tempuri.org/ICvoInventarisService/UpdateHarddiskResponse")]
        int UpdateHarddisk(CvoInventarisClient.ServiceReference.Harddisk h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/UpdateHarddisk", ReplyAction="http://tempuri.org/ICvoInventarisService/UpdateHarddiskResponse")]
        System.Threading.Tasks.Task<int> UpdateHarddiskAsync(CvoInventarisClient.ServiceReference.Harddisk h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeleteHarddisk", ReplyAction="http://tempuri.org/ICvoInventarisService/DeleteHarddiskResponse")]
        int DeleteHarddisk(CvoInventarisClient.ServiceReference.Harddisk h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeleteHarddisk", ReplyAction="http://tempuri.org/ICvoInventarisService/DeleteHarddiskResponse")]
        System.Threading.Tasks.Task<int> DeleteHarddiskAsync(CvoInventarisClient.ServiceReference.Harddisk h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GetLeveranciers", ReplyAction="http://tempuri.org/ICvoInventarisService/GetLeveranciersResponse")]
        CvoInventarisClient.ServiceReference.Leverancier[] GetLeveranciers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GetLeveranciers", ReplyAction="http://tempuri.org/ICvoInventarisService/GetLeveranciersResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Leverancier[]> GetLeveranciersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GetLeverancierById", ReplyAction="http://tempuri.org/ICvoInventarisService/GetLeverancierByIdResponse")]
        CvoInventarisClient.ServiceReference.Leverancier GetLeverancierById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GetLeverancierById", ReplyAction="http://tempuri.org/ICvoInventarisService/GetLeverancierByIdResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Leverancier> GetLeverancierByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InsertLeverancier", ReplyAction="http://tempuri.org/ICvoInventarisService/InsertLeverancierResponse")]
        int InsertLeverancier(CvoInventarisClient.ServiceReference.Leverancier l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InsertLeverancier", ReplyAction="http://tempuri.org/ICvoInventarisService/InsertLeverancierResponse")]
        System.Threading.Tasks.Task<int> InsertLeverancierAsync(CvoInventarisClient.ServiceReference.Leverancier l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/UpdateLeverancier", ReplyAction="http://tempuri.org/ICvoInventarisService/UpdateLeverancierResponse")]
        int UpdateLeverancier(CvoInventarisClient.ServiceReference.Leverancier l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/UpdateLeverancier", ReplyAction="http://tempuri.org/ICvoInventarisService/UpdateLeverancierResponse")]
        System.Threading.Tasks.Task<int> UpdateLeverancierAsync(CvoInventarisClient.ServiceReference.Leverancier l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeleteLeverancier", ReplyAction="http://tempuri.org/ICvoInventarisService/DeleteLeverancierResponse")]
        int DeleteLeverancier(CvoInventarisClient.ServiceReference.Leverancier l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeleteLeverancier", ReplyAction="http://tempuri.org/ICvoInventarisService/DeleteLeverancierResponse")]
        System.Threading.Tasks.Task<int> DeleteLeverancierAsync(CvoInventarisClient.ServiceReference.Leverancier l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GetLokalen", ReplyAction="http://tempuri.org/ICvoInventarisService/GetLokalenResponse")]
        CvoInventarisClient.ServiceReference.Lokaal[] GetLokalen();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GetLokalen", ReplyAction="http://tempuri.org/ICvoInventarisService/GetLokalenResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Lokaal[]> GetLokalenAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GetLokaalById", ReplyAction="http://tempuri.org/ICvoInventarisService/GetLokaalByIdResponse")]
        CvoInventarisClient.ServiceReference.Lokaal GetLokaalById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/GetLokaalById", ReplyAction="http://tempuri.org/ICvoInventarisService/GetLokaalByIdResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Lokaal> GetLokaalByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InsertLokaal", ReplyAction="http://tempuri.org/ICvoInventarisService/InsertLokaalResponse")]
        int InsertLokaal(CvoInventarisClient.ServiceReference.Lokaal l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InsertLokaal", ReplyAction="http://tempuri.org/ICvoInventarisService/InsertLokaalResponse")]
        System.Threading.Tasks.Task<int> InsertLokaalAsync(CvoInventarisClient.ServiceReference.Lokaal l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/UpdateLokaal", ReplyAction="http://tempuri.org/ICvoInventarisService/UpdateLokaalResponse")]
        int UpdateLokaal(CvoInventarisClient.ServiceReference.Lokaal l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/UpdateLokaal", ReplyAction="http://tempuri.org/ICvoInventarisService/UpdateLokaalResponse")]
        System.Threading.Tasks.Task<int> UpdateLokaalAsync(CvoInventarisClient.ServiceReference.Lokaal l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeleteLokaal", ReplyAction="http://tempuri.org/ICvoInventarisService/DeleteLokaalResponse")]
        int DeleteLokaal(CvoInventarisClient.ServiceReference.Lokaal l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/DeleteLokaal", ReplyAction="http://tempuri.org/ICvoInventarisService/DeleteLokaalResponse")]
        System.Threading.Tasks.Task<int> DeleteLokaalAsync(CvoInventarisClient.ServiceReference.Lokaal l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InventarisCreate", ReplyAction="http://tempuri.org/ICvoInventarisService/InventarisCreateResponse")]
        bool InventarisCreate(CvoInventarisClient.ServiceReference.TblInventaris inventaris);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InventarisCreate", ReplyAction="http://tempuri.org/ICvoInventarisService/InventarisCreateResponse")]
        System.Threading.Tasks.Task<bool> InventarisCreateAsync(CvoInventarisClient.ServiceReference.TblInventaris inventaris);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InventarisReadAll", ReplyAction="http://tempuri.org/ICvoInventarisService/InventarisReadAllResponse")]
        CvoInventarisClient.ServiceReference.TblInventaris[] InventarisReadAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InventarisReadAll", ReplyAction="http://tempuri.org/ICvoInventarisService/InventarisReadAllResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.TblInventaris[]> InventarisReadAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InventarisReadOne", ReplyAction="http://tempuri.org/ICvoInventarisService/InventarisReadOneResponse")]
        CvoInventarisClient.ServiceReference.TblInventaris InventarisReadOne(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InventarisReadOne", ReplyAction="http://tempuri.org/ICvoInventarisService/InventarisReadOneResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.TblInventaris> InventarisReadOneAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InventarisUpdate", ReplyAction="http://tempuri.org/ICvoInventarisService/InventarisUpdateResponse")]
        bool InventarisUpdate(CvoInventarisClient.ServiceReference.TblInventaris inventaris);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InventarisUpdate", ReplyAction="http://tempuri.org/ICvoInventarisService/InventarisUpdateResponse")]
        System.Threading.Tasks.Task<bool> InventarisUpdateAsync(CvoInventarisClient.ServiceReference.TblInventaris inventaris);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InventarisDelete", ReplyAction="http://tempuri.org/ICvoInventarisService/InventarisDeleteResponse")]
        bool InventarisDelete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/InventarisDelete", ReplyAction="http://tempuri.org/ICvoInventarisService/InventarisDeleteResponse")]
        System.Threading.Tasks.Task<bool> InventarisDeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/ObjectCreate", ReplyAction="http://tempuri.org/ICvoInventarisService/ObjectCreateResponse")]
        bool ObjectCreate(CvoInventarisClient.ServiceReference.TblObject Object);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/ObjectCreate", ReplyAction="http://tempuri.org/ICvoInventarisService/ObjectCreateResponse")]
        System.Threading.Tasks.Task<bool> ObjectCreateAsync(CvoInventarisClient.ServiceReference.TblObject Object);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/ObjectReadAll", ReplyAction="http://tempuri.org/ICvoInventarisService/ObjectReadAllResponse")]
        CvoInventarisClient.ServiceReference.TblObject[] ObjectReadAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/ObjectReadAll", ReplyAction="http://tempuri.org/ICvoInventarisService/ObjectReadAllResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.TblObject[]> ObjectReadAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/ObjectReadOne", ReplyAction="http://tempuri.org/ICvoInventarisService/ObjectReadOneResponse")]
        CvoInventarisClient.ServiceReference.TblObject ObjectReadOne(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/ObjectReadOne", ReplyAction="http://tempuri.org/ICvoInventarisService/ObjectReadOneResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.TblObject> ObjectReadOneAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/ObjectUpdate", ReplyAction="http://tempuri.org/ICvoInventarisService/ObjectUpdateResponse")]
        bool ObjectUpdate(CvoInventarisClient.ServiceReference.TblObject Object);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/ObjectUpdate", ReplyAction="http://tempuri.org/ICvoInventarisService/ObjectUpdateResponse")]
        System.Threading.Tasks.Task<bool> ObjectUpdateAsync(CvoInventarisClient.ServiceReference.TblObject Object);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/ObjectDelete", ReplyAction="http://tempuri.org/ICvoInventarisService/ObjectDeleteResponse")]
        bool ObjectDelete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/ObjectDelete", ReplyAction="http://tempuri.org/ICvoInventarisService/ObjectDeleteResponse")]
        System.Threading.Tasks.Task<bool> ObjectDeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/NetwerkCreate", ReplyAction="http://tempuri.org/ICvoInventarisService/NetwerkCreateResponse")]
        bool NetwerkCreate(CvoInventarisClient.ServiceReference.TblNetwerk Netwerk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/NetwerkCreate", ReplyAction="http://tempuri.org/ICvoInventarisService/NetwerkCreateResponse")]
        System.Threading.Tasks.Task<bool> NetwerkCreateAsync(CvoInventarisClient.ServiceReference.TblNetwerk Netwerk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/NetwerkReadAll", ReplyAction="http://tempuri.org/ICvoInventarisService/NetwerkReadAllResponse")]
        CvoInventarisClient.ServiceReference.TblNetwerk[] NetwerkReadAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/NetwerkReadAll", ReplyAction="http://tempuri.org/ICvoInventarisService/NetwerkReadAllResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.TblNetwerk[]> NetwerkReadAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/NetwerkReadOne", ReplyAction="http://tempuri.org/ICvoInventarisService/NetwerkReadOneResponse")]
        CvoInventarisClient.ServiceReference.TblNetwerk NetwerkReadOne(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/NetwerkReadOne", ReplyAction="http://tempuri.org/ICvoInventarisService/NetwerkReadOneResponse")]
        System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.TblNetwerk> NetwerkReadOneAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/NetwerkUpdate", ReplyAction="http://tempuri.org/ICvoInventarisService/NetwerkUpdateResponse")]
        bool NetwerkUpdate(CvoInventarisClient.ServiceReference.TblNetwerk Netwerk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/NetwerkUpdate", ReplyAction="http://tempuri.org/ICvoInventarisService/NetwerkUpdateResponse")]
        System.Threading.Tasks.Task<bool> NetwerkUpdateAsync(CvoInventarisClient.ServiceReference.TblNetwerk Netwerk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/NetwerkDelete", ReplyAction="http://tempuri.org/ICvoInventarisService/NetwerkDeleteResponse")]
        bool NetwerkDelete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICvoInventarisService/NetwerkDelete", ReplyAction="http://tempuri.org/ICvoInventarisService/NetwerkDeleteResponse")]
        System.Threading.Tasks.Task<bool> NetwerkDeleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICvoInventarisServiceChannel : CvoInventarisClient.ServiceReference.ICvoInventarisService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CvoInventarisServiceClient : System.ServiceModel.ClientBase<CvoInventarisClient.ServiceReference.ICvoInventarisService>, CvoInventarisClient.ServiceReference.ICvoInventarisService {
        
        public CvoInventarisServiceClient() {
        }
        
        public CvoInventarisServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CvoInventarisServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CvoInventarisServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CvoInventarisServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CvoInventarisClient.ServiceReference.Cpu CpuGetById(int id) {
            return base.Channel.CpuGetById(id);
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Cpu> CpuGetByIdAsync(int id) {
            return base.Channel.CpuGetByIdAsync(id);
        }
        
        public CvoInventarisClient.ServiceReference.Cpu[] CpuGetAll() {
            return base.Channel.CpuGetAll();
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Cpu[]> CpuGetAllAsync() {
            return base.Channel.CpuGetAllAsync();
        }
        
        public int CpuCreate(CvoInventarisClient.ServiceReference.Cpu c) {
            return base.Channel.CpuCreate(c);
        }
        
        public System.Threading.Tasks.Task<int> CpuCreateAsync(CvoInventarisClient.ServiceReference.Cpu c) {
            return base.Channel.CpuCreateAsync(c);
        }
        
        public bool CpuUpdate(CvoInventarisClient.ServiceReference.Cpu c) {
            return base.Channel.CpuUpdate(c);
        }
        
        public System.Threading.Tasks.Task<bool> CpuUpdateAsync(CvoInventarisClient.ServiceReference.Cpu c) {
            return base.Channel.CpuUpdateAsync(c);
        }
        
        public bool CpuDelete(int id) {
            return base.Channel.CpuDelete(id);
        }
        
        public System.Threading.Tasks.Task<bool> CpuDeleteAsync(int id) {
            return base.Channel.CpuDeleteAsync(id);
        }
        
        public CvoInventarisClient.ServiceReference.Device DeviceGetById(int id) {
            return base.Channel.DeviceGetById(id);
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Device> DeviceGetByIdAsync(int id) {
            return base.Channel.DeviceGetByIdAsync(id);
        }
        
        public CvoInventarisClient.ServiceReference.Device[] DeviceGetAll() {
            return base.Channel.DeviceGetAll();
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Device[]> DeviceGetAllAsync() {
            return base.Channel.DeviceGetAllAsync();
        }
        
        public int DeviceCreate(CvoInventarisClient.ServiceReference.Device d) {
            return base.Channel.DeviceCreate(d);
        }
        
        public System.Threading.Tasks.Task<int> DeviceCreateAsync(CvoInventarisClient.ServiceReference.Device d) {
            return base.Channel.DeviceCreateAsync(d);
        }
        
        public bool DeviceUpdate(CvoInventarisClient.ServiceReference.Device d) {
            return base.Channel.DeviceUpdate(d);
        }
        
        public System.Threading.Tasks.Task<bool> DeviceUpdateAsync(CvoInventarisClient.ServiceReference.Device d) {
            return base.Channel.DeviceUpdateAsync(d);
        }
        
        public bool DeviceDelete(int id) {
            return base.Channel.DeviceDelete(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeviceDeleteAsync(int id) {
            return base.Channel.DeviceDeleteAsync(id);
        }
        
        public CvoInventarisClient.ServiceReference.GrafischeKaart GrafischeKaartGetById(int id) {
            return base.Channel.GrafischeKaartGetById(id);
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.GrafischeKaart> GrafischeKaartGetByIdAsync(int id) {
            return base.Channel.GrafischeKaartGetByIdAsync(id);
        }
        
        public CvoInventarisClient.ServiceReference.GrafischeKaart[] GrafischeKaartGetAll() {
            return base.Channel.GrafischeKaartGetAll();
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.GrafischeKaart[]> GrafischeKaartGetAllAsync() {
            return base.Channel.GrafischeKaartGetAllAsync();
        }
        
        public int GrafischeKaartCreate(CvoInventarisClient.ServiceReference.GrafischeKaart g) {
            return base.Channel.GrafischeKaartCreate(g);
        }
        
        public System.Threading.Tasks.Task<int> GrafischeKaartCreateAsync(CvoInventarisClient.ServiceReference.GrafischeKaart g) {
            return base.Channel.GrafischeKaartCreateAsync(g);
        }
        
        public bool GrafischeKaartUpdate(CvoInventarisClient.ServiceReference.GrafischeKaart g) {
            return base.Channel.GrafischeKaartUpdate(g);
        }
        
        public System.Threading.Tasks.Task<bool> GrafischeKaartUpdateAsync(CvoInventarisClient.ServiceReference.GrafischeKaart g) {
            return base.Channel.GrafischeKaartUpdateAsync(g);
        }
        
        public bool GrafischeKaartDelete(int id) {
            return base.Channel.GrafischeKaartDelete(id);
        }
        
        public System.Threading.Tasks.Task<bool> GrafischeKaartDeleteAsync(int id) {
            return base.Channel.GrafischeKaartDeleteAsync(id);
        }
        
        public CvoInventarisClient.ServiceReference.Harddisk[] GetHarddisks() {
            return base.Channel.GetHarddisks();
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Harddisk[]> GetHarddisksAsync() {
            return base.Channel.GetHarddisksAsync();
        }
        
        public CvoInventarisClient.ServiceReference.Harddisk GetHarddiskById(string id) {
            return base.Channel.GetHarddiskById(id);
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Harddisk> GetHarddiskByIdAsync(string id) {
            return base.Channel.GetHarddiskByIdAsync(id);
        }
        
        public int InsertHarddisk(CvoInventarisClient.ServiceReference.Harddisk h) {
            return base.Channel.InsertHarddisk(h);
        }
        
        public System.Threading.Tasks.Task<int> InsertHarddiskAsync(CvoInventarisClient.ServiceReference.Harddisk h) {
            return base.Channel.InsertHarddiskAsync(h);
        }
        
        public int UpdateHarddisk(CvoInventarisClient.ServiceReference.Harddisk h) {
            return base.Channel.UpdateHarddisk(h);
        }
        
        public System.Threading.Tasks.Task<int> UpdateHarddiskAsync(CvoInventarisClient.ServiceReference.Harddisk h) {
            return base.Channel.UpdateHarddiskAsync(h);
        }
        
        public int DeleteHarddisk(CvoInventarisClient.ServiceReference.Harddisk h) {
            return base.Channel.DeleteHarddisk(h);
        }
        
        public System.Threading.Tasks.Task<int> DeleteHarddiskAsync(CvoInventarisClient.ServiceReference.Harddisk h) {
            return base.Channel.DeleteHarddiskAsync(h);
        }
        
        public CvoInventarisClient.ServiceReference.Leverancier[] GetLeveranciers() {
            return base.Channel.GetLeveranciers();
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Leverancier[]> GetLeveranciersAsync() {
            return base.Channel.GetLeveranciersAsync();
        }
        
        public CvoInventarisClient.ServiceReference.Leverancier GetLeverancierById(string id) {
            return base.Channel.GetLeverancierById(id);
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Leverancier> GetLeverancierByIdAsync(string id) {
            return base.Channel.GetLeverancierByIdAsync(id);
        }
        
        public int InsertLeverancier(CvoInventarisClient.ServiceReference.Leverancier l) {
            return base.Channel.InsertLeverancier(l);
        }
        
        public System.Threading.Tasks.Task<int> InsertLeverancierAsync(CvoInventarisClient.ServiceReference.Leverancier l) {
            return base.Channel.InsertLeverancierAsync(l);
        }
        
        public int UpdateLeverancier(CvoInventarisClient.ServiceReference.Leverancier l) {
            return base.Channel.UpdateLeverancier(l);
        }
        
        public System.Threading.Tasks.Task<int> UpdateLeverancierAsync(CvoInventarisClient.ServiceReference.Leverancier l) {
            return base.Channel.UpdateLeverancierAsync(l);
        }
        
        public int DeleteLeverancier(CvoInventarisClient.ServiceReference.Leverancier l) {
            return base.Channel.DeleteLeverancier(l);
        }
        
        public System.Threading.Tasks.Task<int> DeleteLeverancierAsync(CvoInventarisClient.ServiceReference.Leverancier l) {
            return base.Channel.DeleteLeverancierAsync(l);
        }
        
        public CvoInventarisClient.ServiceReference.Lokaal[] GetLokalen() {
            return base.Channel.GetLokalen();
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Lokaal[]> GetLokalenAsync() {
            return base.Channel.GetLokalenAsync();
        }
        
        public CvoInventarisClient.ServiceReference.Lokaal GetLokaalById(string id) {
            return base.Channel.GetLokaalById(id);
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.Lokaal> GetLokaalByIdAsync(string id) {
            return base.Channel.GetLokaalByIdAsync(id);
        }
        
        public int InsertLokaal(CvoInventarisClient.ServiceReference.Lokaal l) {
            return base.Channel.InsertLokaal(l);
        }
        
        public System.Threading.Tasks.Task<int> InsertLokaalAsync(CvoInventarisClient.ServiceReference.Lokaal l) {
            return base.Channel.InsertLokaalAsync(l);
        }
        
        public int UpdateLokaal(CvoInventarisClient.ServiceReference.Lokaal l) {
            return base.Channel.UpdateLokaal(l);
        }
        
        public System.Threading.Tasks.Task<int> UpdateLokaalAsync(CvoInventarisClient.ServiceReference.Lokaal l) {
            return base.Channel.UpdateLokaalAsync(l);
        }
        
        public int DeleteLokaal(CvoInventarisClient.ServiceReference.Lokaal l) {
            return base.Channel.DeleteLokaal(l);
        }
        
        public System.Threading.Tasks.Task<int> DeleteLokaalAsync(CvoInventarisClient.ServiceReference.Lokaal l) {
            return base.Channel.DeleteLokaalAsync(l);
        }
        
        public bool InventarisCreate(CvoInventarisClient.ServiceReference.TblInventaris inventaris) {
            return base.Channel.InventarisCreate(inventaris);
        }
        
        public System.Threading.Tasks.Task<bool> InventarisCreateAsync(CvoInventarisClient.ServiceReference.TblInventaris inventaris) {
            return base.Channel.InventarisCreateAsync(inventaris);
        }
        
        public CvoInventarisClient.ServiceReference.TblInventaris[] InventarisReadAll() {
            return base.Channel.InventarisReadAll();
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.TblInventaris[]> InventarisReadAllAsync() {
            return base.Channel.InventarisReadAllAsync();
        }
        
        public CvoInventarisClient.ServiceReference.TblInventaris InventarisReadOne(int id) {
            return base.Channel.InventarisReadOne(id);
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.TblInventaris> InventarisReadOneAsync(int id) {
            return base.Channel.InventarisReadOneAsync(id);
        }
        
        public bool InventarisUpdate(CvoInventarisClient.ServiceReference.TblInventaris inventaris) {
            return base.Channel.InventarisUpdate(inventaris);
        }
        
        public System.Threading.Tasks.Task<bool> InventarisUpdateAsync(CvoInventarisClient.ServiceReference.TblInventaris inventaris) {
            return base.Channel.InventarisUpdateAsync(inventaris);
        }
        
        public bool InventarisDelete(int id) {
            return base.Channel.InventarisDelete(id);
        }
        
        public System.Threading.Tasks.Task<bool> InventarisDeleteAsync(int id) {
            return base.Channel.InventarisDeleteAsync(id);
        }
        
        public bool ObjectCreate(CvoInventarisClient.ServiceReference.TblObject Object) {
            return base.Channel.ObjectCreate(Object);
        }
        
        public System.Threading.Tasks.Task<bool> ObjectCreateAsync(CvoInventarisClient.ServiceReference.TblObject Object) {
            return base.Channel.ObjectCreateAsync(Object);
        }
        
        public CvoInventarisClient.ServiceReference.TblObject[] ObjectReadAll() {
            return base.Channel.ObjectReadAll();
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.TblObject[]> ObjectReadAllAsync() {
            return base.Channel.ObjectReadAllAsync();
        }
        
        public CvoInventarisClient.ServiceReference.TblObject ObjectReadOne(int id) {
            return base.Channel.ObjectReadOne(id);
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.TblObject> ObjectReadOneAsync(int id) {
            return base.Channel.ObjectReadOneAsync(id);
        }
        
        public bool ObjectUpdate(CvoInventarisClient.ServiceReference.TblObject Object) {
            return base.Channel.ObjectUpdate(Object);
        }
        
        public System.Threading.Tasks.Task<bool> ObjectUpdateAsync(CvoInventarisClient.ServiceReference.TblObject Object) {
            return base.Channel.ObjectUpdateAsync(Object);
        }
        
        public bool ObjectDelete(int id) {
            return base.Channel.ObjectDelete(id);
        }
        
        public System.Threading.Tasks.Task<bool> ObjectDeleteAsync(int id) {
            return base.Channel.ObjectDeleteAsync(id);
        }
        
        public bool NetwerkCreate(CvoInventarisClient.ServiceReference.TblNetwerk Netwerk) {
            return base.Channel.NetwerkCreate(Netwerk);
        }
        
        public System.Threading.Tasks.Task<bool> NetwerkCreateAsync(CvoInventarisClient.ServiceReference.TblNetwerk Netwerk) {
            return base.Channel.NetwerkCreateAsync(Netwerk);
        }
        
        public CvoInventarisClient.ServiceReference.TblNetwerk[] NetwerkReadAll() {
            return base.Channel.NetwerkReadAll();
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.TblNetwerk[]> NetwerkReadAllAsync() {
            return base.Channel.NetwerkReadAllAsync();
        }
        
        public CvoInventarisClient.ServiceReference.TblNetwerk NetwerkReadOne(int id) {
            return base.Channel.NetwerkReadOne(id);
        }
        
        public System.Threading.Tasks.Task<CvoInventarisClient.ServiceReference.TblNetwerk> NetwerkReadOneAsync(int id) {
            return base.Channel.NetwerkReadOneAsync(id);
        }
        
        public bool NetwerkUpdate(CvoInventarisClient.ServiceReference.TblNetwerk Netwerk) {
            return base.Channel.NetwerkUpdate(Netwerk);
        }
        
        public System.Threading.Tasks.Task<bool> NetwerkUpdateAsync(CvoInventarisClient.ServiceReference.TblNetwerk Netwerk) {
            return base.Channel.NetwerkUpdateAsync(Netwerk);
        }
        
        public bool NetwerkDelete(int id) {
            return base.Channel.NetwerkDelete(id);
        }
        
        public System.Threading.Tasks.Task<bool> NetwerkDeleteAsync(int id) {
            return base.Channel.NetwerkDeleteAsync(id);
        }
    }
}
